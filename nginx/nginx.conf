user  nginx;
worker_processes  1;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;
events {
    worker_connections  1024;
}
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    upstream docker-server {
        ## upstream options
        # least_conn # 가장 클라이언트 연결 갯수가 적은 서버로 전달하는 설정
        # ip_hash # 클라이언트 IP를 hash해서 특정 클라이언트는 특정 서버로 연결하는 설정. session clustering이 구성되지 않은 경우 유용하나 부하가 골고루 분산되지 않고 특정 서버에 몰릴 위험이있음

        ## server options
        # max_fails : 최대 실패 횟수 지정
        # fail_timeout : 최대 타임아웃 시간 지정 (s)
        # backup # 메인서버가 다 fault 일 경우에만 서비스
        # weight # 가중치 지정 default 1

        server server-a:5000 max_fails=1 fail_timeout=1s;
        server server-b:5000 max_fails=1 fail_timeout=1s;
        server server-c:5000 backup;
        # server server-d:5000 weight=10 max_fails=3 fail_timeout=10s;
    }
    server {
        listen 80;
        server_name localhost;
 
        location / {
            root /usr/share/nginx/html;
            index index.html index.htm;
            try_files $uri $uri/ /index.html =404;
        }
        location /api {
            proxy_pass         http://docker-server;
            proxy_redirect     off;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location /socket {
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_pass http://docker-server;
        }
    }
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;
 
    sendfile        on;
    keepalive_timeout  65;
    include /etc/nginx/conf.d/*.conf;
}